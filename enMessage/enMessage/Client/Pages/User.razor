@page "/user/{userid}"
@using enMessage.Shared.ViewModels
@inject IJSRuntime JsRuntime
@inject HttpClient client
@inject NavigationManager NavManager

<div class="sidebar">
    <button onclick="@GoToCreateChat">Create chat</button>
    <button onclick="@GoToFriends">Friends</button>
    <button onclick="@Logout">Logout</button>
</div>

<h3>UserControl</h3>
<p>username</p>
<p>@UserId</p>

<div>
    <h4>Chats:</h4>

    @if(@me != null)
    {
        @foreach(var chat in me.Chats.OrderByDescending(c => c.LastInteraction))
        {
            <div>
                <button @onclick="@(() => GoToChatRoom(chat.ID))">@chat.ChatName</button>
                <label>@chat.LastInteraction</label>
           </div>
        }
    }
</div>

@code {
    [Parameter]
    public string UserId { get; set; }
    private string username = string.Empty;
    private UserViewModel me;


    protected override async Task OnInitializedAsync()
    {
        me = await client.GetFromJsonAsync<UserViewModel>("api/users/" + UserId);
        username = me.Username;
    }

    protected void GoToChatRoom(Guid id)
    {
        NavManager.NavigateTo("chat/" +UserId + "/" + id);
    }

    protected void GoToCreateChat()
    {
        NavManager.NavigateTo("createchat/" + UserId);
    }

    protected void GoToFriends()
    {
        NavManager.NavigateTo("friends/" + UserId);
    }

    protected void Logout()
    {
        NavManager.NavigateTo("/");
    }
}
